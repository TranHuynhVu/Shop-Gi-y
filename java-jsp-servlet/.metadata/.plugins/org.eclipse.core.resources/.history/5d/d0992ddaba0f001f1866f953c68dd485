package com.shopgiay.controller.web.api;

import java.io.IOException;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.JSONObject;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.shopgiay.util.JsonUtil;

/**
 * Servlet implementation class ProductApi
 */
@WebServlet("/api-web-product")
public class ProductApi extends HttpServlet {
	private static final long serialVersionUID = 1L;

	protected void doGet(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		// TODO Auto-generated method stub
		response.getWriter().append("Served at: ").append(request.getContextPath());
	}

	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		ObjectMapper mapper = new ObjectMapper();
		request.setCharacterEncoding("UTF-8");
		response.setContentType("application/json");
		Map<String, Object> obMap = new HashMap<String, Object>();
		JSONObject object = JsonUtil.of(request.getReader()).getObject();
		String sort = object.getString("filter0");
		String price = object.getString("filter1");
		String color = object.getString("filter2");
		if (sort != null) {
			switch (sort) {
			case "Default":
				sort = "Default";
				break;
			case "Average rating":
				sort = "Default";
				break;
			case "Price: Low to High":
				sort = "desc";
				break;
			case "Price: High to Low":
				sort = "acs";
				break;
			}
		}
		if (price != null) {
			switch (price) {
			case "all":
				price = ">0";
				break;
			case "$0 - $100":
				price = "BETWEEN 0 AND 100";
				break;
			case "$100 - $200":
				price = "BETWEEN 100 AND 200";
				break;
			case "$200 - $300":
				price = "BETWEEN 200 AND 300";
				break;
			case "$300+":
				price = ">300";
				break;
			}
		}

		obMap.put("aa", sort + price + color);

		mapper.writeValue(response.getOutputStream(), obMap);
	}
}
